#include <bits/stdc++.h>
using namespace std;


/* 
    Author: IronByte
    Securinets Quals CTF 2023
*/

void printTreeEdges(int prufer[], int m) {
    int vertices = m + 2;
    int vertex_set[vertices];
    
    for (int i = 0; i < vertices; i++)
        vertex_set[i] = 0;
    
    for (int i = 0; i < vertices - 2; i++)
        vertex_set[prufer[i] - 1] += 1;

    int j = 0;
    for (int i = 0; i < vertices - 2; i++) {
        for (j = 0; j < vertices; j++) {
            if (vertex_set[j] == 0) {
                vertex_set[j] = -1;
                cout << "(" << (j + 1) << ", "
                     << prufer[i] << ")  ";
 
                vertex_set[prufer[i] - 1]--;
                break;
            }
        }
    }

    j = 0;
    for (int i = 0; i < vertices; i++) {
        if (vertex_set[i] == 0 && j == 0) {
            cout << "(" << (i + 1) << ", ";
            j++;
        }
        else if (vertex_set[i] == 0 && j == 1)
            cout << (i + 1) << ")\n";
    }
}
 

int main() {
    int prufer[] = {407,454,323,360,139,107,241,288,375,53,465,220,397,21,401,13,85,316,90,143,456,483,482,377,241,213,25,118,427,124,150,237,91,148,142,508,115,158,240,235,468,112,123,277,117,494,317,482,346,176,14,286,350,422,61,276,55,470,17,444,320,322,143,369,36,47,108,476,379,128,306,65,73,322,74,126,126,350,58,302,399,25,388,205,311,370,367,150,316,443,38,407,290,171,298,268,125,365,379,207,379,342,259,356,375,216,468,196,96,317,314,19,241,407,343,356,470,285,55,139,445,411,129,218,107,90,67,149,7,347,387,351,363,342,6,29,202,293,76,81,154,383,30,474,39,83,19,486,224,128,84,375,174,443,189,84,323,507,278,197,155,82,142,63,129,488,148,243,338,218,81,18,244,250,365,483,374,502,311,117,126,181,81,27,397,394,176,252,499,487,483,434,285,410,91,419,508,231,452,383,346,304,331,349,324,30,96,284,486,58,108,368,493,293,414,268,432,212,96,285,494,319,347,247,430,236,110,126,126,494,288,469,488,333,51,396,241,386,292,34,471,91,354,163,39,399,219,466,432,474,361,323,498,148,486,474,154,394,138,421,260,256,150,269,47,90,193,421,320,73,14,481,339,452,287,112,203,287,27,98,81,343,339,59,343,283,286,188,452,390,18,263,159,103,379,474,188,508,33,322,29,446,112,291,119,42,193,354,421,170,117,281,350,295,220,411,494,469,112,390,319,468,286,47,105,202,126,243,346,230,352,260,323,323,159,306,464,339,407,66,55,84,485,292,116,464,323,231,102,244,263,112,443,133,237,376,129,274,498,380,141,193,133,287,392,303,494,34,254,22,270,6,254,161,414,178,497,482,278,414,51,252,108,34,259,115,317,211,486,174,96,237,247,126,48,235,133,401,52,365,16,196,22,333,346,118,14,342,348,74,447,149,126,52,224,102,351,339,259,90,268,212,211,468,236,193,112,84,474,497,218,281,194,168,352,84,259,237,90,489,270,377,247,491,394,274,39,126,376,259,108,235,381,468,357,292,274,235,11,6,162,392,468,22,323,203,342,287,103,66,235,251,110,29,390,281,263,31,118,474,287,469,235,112,224,181,281,14,51,203,235,317,450,221,155,81,90,281,112,317,475,86,168,203,281,317,47,259,27,228};
    int n = sizeof(prufer) / sizeof(prufer[0]);
    printTreeEdges(prufer, n); 
    // Parse the result in the format x1-y1-x2-y2..etc cuz I'm too lazy to do that you can check the payload :) XD
    return 0;
}
